AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  AllowCorsForWhatOrigin:
    Type: String
    Default: ''
  DeployStage:
    Type: String
    Default: dev
    AllowedValues: 
      - dev
      - v1

Resources:
  #I choose HTTP Api on this: <https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-vs-rest.html>
  ApiGateway:  
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub "${AWS::StackName}-ApiGateway"
      CorsConfiguration:
        AllowHeaders:
          - '*'
        AllowMethods:
          - 'GET'
          - 'POST'
          - 'PUT'
          - 'DELETE'
        AllowOrigins:
          - !Ref AllowCorsForWhatOrigin
      ProtocolType: HTTP
      Target: !ImportValue simple-serverless-arch-aws-lambda-ProxyAwsLambdaArn
  ApiGatewayStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref ApiGateway
      AutoDeploy: True
      StageName: !Ref DeployStage
      #TODO: Put logs: https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-logging.html
  ApiGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !ImportValue simple-serverless-arch-aws-lambda-ProxyAwsLambdaArn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceAccount: !Ref "AWS::AccountId"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/*/*"
Outputs:
  ApiGateway:
    Value: !Ref ApiGateway
    Export:
      Name: !Sub "${AWS::StackName}-ApiGatewayId"