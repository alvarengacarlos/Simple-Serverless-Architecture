AWSTemplateFormatVersion: "2010-09-09"

Resources:
  ProxyAwsLambdaRole:
    Type: AWS::IAM::Role
    Properties: 
      AssumeRolePolicyDocument:        
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal: 
              Service: lambda.amazonaws.com
      RoleName: simple-serverless-arch-proxy-lambda-role
  ProxyAwsLambda:
    Type: AWS::Lambda::Function
    Properties:
      Architectures: 
        - arm64
      Code:
        S3Bucket: !ImportValue simple-serverless-arch-amazon-s3-bucket-ProxyLambdaS3BucketId
        S3Key: simple-serverless-arch-proxy-lambda.zip
      FunctionName: simple-serverless-arch-proxy-lambda
      Handler: index.handler
      PackageType: Zip
      Role: !GetAtt ProxyAwsLambdaRole.Arn
      Runtime: nodejs18.x
Outputs:
  ProxyAwsLambdaRole:
    Value: !Ref ProxyAwsLambda
    Export:
      Name: !Sub "${AWS::StackName}ProxyAwsLambdaRoleId"
  ProxyAwsLambdaRoleArn:
    Value: !GetAtt ProxyAwsLambda.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ProxyAwsLambdaRoleArn"